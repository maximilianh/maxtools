#!/usr/bin/env python

from sys import *
from optparse import OptionParser
from os.path import join, dirname
path.append(join(dirname(__file__), "lib"))

import logging, maxbio
possChars = set("ACDEFGHIKLMNPQRSTVWYBXZJUO")

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = OptionParser("usage: %prog [options] filename - convert tabular file to fasta file") 

#parser.add_option("-l", "--wordlength", dest="motiflength", action="store", help="length of word [default: %default, hexamers]", type="int", metavar="NUMBER", default="6") 
#parser.add_option("-m", "--maf", dest="maf", action="store_true", help="force maf format [default: %default]", default=True) 
parser.add_option("-d", "--debug", dest="debug", action="store_true", help="show debug messages") 
parser.add_option("-c", "--clean", dest="clean", action="store_true", help="skip sequences that include illegal chars") 
(options, args) = parser.parse_args()

if options.debug:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.INFO)

if args==[]: 
    parser.print_help()
    exit(1)
# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
inFilename = args[0]
ifh = maxbio.openFile(inFilename)
if len(args)==2:
    fname = args[1]
    ofh = open(fname, "w")
else:
    ofh = stdout

i = 0
for line in ifh:
    line = line.strip()
    fields = line.strip().split("\t")
    if len(fields)==2:
        id = fields[0]
        seq = fields[1]
    elif len(fields)==3:
        id = fields[0]+" "+fields[1]
        seq = fields[2]
    else:
        id = "seq"+str(i)
        seq = fields[0]
    if options.clean and len(set(seq)-possChars)!=0:
        logging.info("seq %s illegal, skipping" % seq)
        continue
    if len(seq)==0:
        continue
    i+=1

    ofh.write(">"+id+"\n")
    ofh.write(seq)
    ofh.write("\n")
