#!/usr/bin/env python3

import logging, sys, optparse, os
from collections import defaultdict
from os.path import join, basename, dirname, isfile
import string
import re

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = optparse.OptionParser("usage: %prog [options] filename - convert UCSC ctfile (custom track info as stored in the trash dir) to track hub's trackDb.txt format. Output goes to stdout") 

parser.add_option("-d", "--debug", dest="debug", action="store_true", help="show debug messages") 
parser.add_option("", "--download", dest="download", action="store_true", help="only download bigDataUrl files to current dir") 
#parser.add_option("-f", "--file", dest="file", action="store", help="run on file") 
#parser.add_option("", "--test", dest="test", action="store_true", help="do something") 
(options, args) = parser.parse_args()

if options.debug:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.INFO)
# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]:
    parser.print_help()
    exit(1)

filename = args[0]
# tags that we don't pass through
delTags = set("visibility origTrackLine name tdbType genome bigDataUrl type inputType description".split())
visToWord = {"3" : "pack", "0" : "hide", "1" : "dense", "2" : "full"}

for line in open(filename):
    #fields = line.rstrip('\n').split("\t")
    fields = re.split(''' (?=(?:[^'"]|'[^']*'|"[^"]*")*$)''', line.rstrip())
    data = {}
    for field in fields:
        if "=" not in field:
            continue
        k, v = str.split(field, "=", 1)
        v = v.strip("'")
        data[k] = v.strip('"')

    if "bigDataUrl" in data:
        fname = basename(data["bigDataUrl"])
        tName = data["name"].replace("+", "plus").replace("-", "minus").replace(" ", "").replace("(", "").replace(")","")
        #print data
        print("track", tName)
        print("shortLabel", data["name"])
        print("longLabel", data["description"])
        print("bigDataUrl", data["bigDataUrl"])
        if "visibility" in data:
            if data["visibility"].isdigit():
                print("visibility", visToWord[data["visibility"]])
            else:
                print("visibility", data["visibility"])
        if "tdbType" in data:
            print("type", data["tdbType"])
        else:
            print("type", data["type"])

        for k, v in data.items():
            if not k in delTags:
                print( k, v)
        print()

    if options.download:
        cmd = "wget "+data["bigDataUrl"]
        assert(os.system(cmd)==0)


