#!/usr/bin/env python

# split a tsv table into many small files, named by the first field

import logging, sys, optparse
from collections import defaultdict
from os.path import join, basename, dirname, isfile

# ==== functions =====
    
def parseArgs():
    " setup logging, parse command line arguments and options. -h shows auto-generated help page "
    parser = optparse.OptionParser("usage: %prog [options] filename outDir - split a tsv (tab) file into small files, named by the first field")

    parser.add_option("-d", "--debug", dest="debug", action="store_true", help="show debug messages")
    #parser.add_option("-f", "--file", dest="file", action="store", help="run on file") 
    #parser.add_option("", "--test", dest="test", action="store_true", help="do something") 
    (options, args) = parser.parse_args()

    if args==[]:
        parser.print_help()
        exit(1)

    if options.debug:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)
    return args, options
# ----------- main --------------
def main():
    args, options = parseArgs()

    filename, outDir = args

    ifh = open(filename)

    headers = ifh.readline().rstrip("\n").split('\t')
    otherHeaders = headers[1:]

    data = defaultdict(list)
    for line in ifh:
        row = line.rstrip("\n").split('\t')
        field1 = row[0]
        otherFields = row[1:]
        data[field1].append(otherFields)

    for key, rows in data.iteritems():
        outFname = join(outDir, key+".tsv")
        print "Writing %s" % outFname
        ofh = open(outFname, "w")
        ofh.write("\t".join(otherHeaders))
        ofh.write("\n")
        for row in rows:
            ofh.write("\t".join(row))
            ofh.write("\n")
        ofh.close()

main()
